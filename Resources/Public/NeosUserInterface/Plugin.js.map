{
  "version": 3,
  "sources": ["../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/readFromConsumerApi.ts", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/index.ts", "../../Private/NeosUserInterface/src/index.js"],
  "sourcesContent": ["export default function readFromConsumerApi(key: string): (...args: any[]) => any {\n    return (...args: any[]) => {\n        if ((window as any)['@Neos:HostPluginAPI'] && (window as any)['@Neos:HostPluginAPI'][`@${key}`]) {\n            return (window as any)['@Neos:HostPluginAPI'][`@${key}`](...args);\n        }\n\n        throw new Error('You are trying to read from a consumer api that hasn\\'t been initialized yet!');\n    };\n}\n", "import createConsumerApi from './createConsumerApi';\nimport readFromConsumerApi from './readFromConsumerApi';\nimport {\n    SynchronousRegistry,\n    SynchronousMetaRegistry\n} from './registry/index';\n\nexport default readFromConsumerApi('manifest');\n\nexport {\n    createConsumerApi,\n    readFromConsumerApi,\n    SynchronousRegistry,\n    SynchronousMetaRegistry\n};\n", "import manifest from \"@neos-project/neos-ui-extensibility\";\n\nconst addPlugin = (Plugin, isEnabled) => (ckEditorConfiguration, options) => {\n\tif (!isEnabled || isEnabled(options.editorOptions, options)) {\n\t\treturn {\n\t\t\t...ckEditorConfiguration,\n\t\t\tplugins: [\n\t\t\t\t...(ckEditorConfiguration.plugins ?? []),\n\t\t\t\tPlugin\n\t\t\t]\n\t\t};\n\t}\n\treturn ckEditorConfiguration;\n};\n\nconst createInputSubstitutionPlugin = (replacementsConfiguration) => function (editor) {\n\t// https://ckeditor.com/docs/ckeditor5/16.0.0/framework/guides/deep-dive/clipboard.html#input-pipeline\n\n\tconst replacements = replacementsConfiguration.map(({search, replace}) => [search, replace])\n\n\tconst replaceText = (textElement, newText) => {\n\t\t// todo use `UpcastWriter.createText` and `UpcastWriter.replace` but we cant get ahold of the writer until: https://github.com/neos/neos-ui/issues/3436\n\t\ttextElement._textData = newText\n\t}\n\n\tconst traverseTextElements = (element, textVisitor) => {\n\t\tif (element.is(\"text\")) {\n\t\t\ttextVisitor(element)\n\t\t\treturn\n\t\t}\n\n\t\tif (element.childCount) {\n\t\t\tfor (const child of element.getChildren()) {\n\t\t\t\ttraverseTextElements(child, textVisitor)\n\t\t\t}\n\t\t}\n\t}\n\n\t// fyi when ckeditor is updated, the api changes to `editor.plugins.get('ClipboardPipeline')`\n\teditor.plugins.get('Clipboard').on(\n\t\t'inputTransformation',\n\t\t(evt, data) => {\n\t\t\ttraverseTextElements(data.content, (textElement) => {\n\t\t\t\t/** @type string */\n\t\t\t\tconst textContents = textElement.data;\n\n\t\t\t\tlet newTextContents = textContents;\n\n\t\t\t\tfor (const [from, to] of replacements) {\n\t\t\t\t\tnewTextContents = newTextContents.replaceAll(from, to)\n\t\t\t\t}\n\n\t\t\t\tif (textContents !== newTextContents) {\n\t\t\t\t\treplaceText(textElement, newTextContents)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\t{priority: 'high'}\n\t);\n}\n\nmanifest('Visol.Neos.InputSubstitution', {}, (globalRegistry, {frontendConfiguration}) => {\n\tconst ckEditorRegistry = globalRegistry.get('ckEditor5');\n\tconst replacementsConfiguration = frontendConfiguration['Visol.Neos.InputSubstitution'].replacements;\n\n\tconst config = ckEditorRegistry.get('config');\n\n\tconst InputSubstitutionPlugin = createInputSubstitutionPlugin(replacementsConfiguration);\n\tconfig.set('Visol.Neos.InputSubstitution', addPlugin(InputSubstitutionPlugin, () => true));\n\n\treturn config;\n});\n"],
  "mappings": "MAAc,SAAPA,EAAqCC,EAAW,CACnD,MAAO,IAAIC,IAAe,CACtB,GAAK,OAAe,qBAAqB,GAAM,OAAe,qBAAqB,EAAE,IAAID,GAAK,EAC1F,OAAQ,OAAe,qBAAqB,EAAE,IAAIA,GAAK,EAAE,GAAGC,CAAI,EAGpE,MAAM,IAAI,MAAM,8EAA+E,CACnG,CACJ,CCDA,IAAAC,EAAeC,EAAoB,UAAU,ECL7C,IAAMC,EAAY,CAACC,EAAQC,IAAc,CAACC,EAAuBC,IAC5D,CAACF,GAAaA,EAAUE,EAAQ,cAAeA,CAAO,EAClD,CACN,GAAGD,EACH,QAAS,CACR,GAAIA,EAAsB,SAAW,CAAC,EACtCF,CACD,CACD,EAEME,EAGFE,EAAiCC,GAA8B,SAAUC,EAAQ,CAGtF,IAAMC,EAAeF,EAA0B,IAAI,CAAC,CAAC,OAAAG,EAAQ,QAAAC,CAAO,IAAM,CAACD,EAAQC,CAAO,CAAC,EAErFC,EAAc,CAACC,EAAaC,IAAY,CAE7CD,EAAY,UAAYC,CACzB,EAEMC,EAAuB,CAACC,EAASC,IAAgB,CACtD,GAAID,EAAQ,GAAG,MAAM,EAAG,CACvBC,EAAYD,CAAO,EACnB,OAGD,GAAIA,EAAQ,WACX,QAAWE,KAASF,EAAQ,YAAY,EACvCD,EAAqBG,EAAOD,CAAW,CAG1C,EAGAT,EAAO,QAAQ,IAAI,WAAW,EAAE,GAC/B,sBACA,CAACW,EAAKC,IAAS,CACdL,EAAqBK,EAAK,QAAUP,GAAgB,CAEnD,IAAMQ,EAAeR,EAAY,KAE7BS,EAAkBD,EAEtB,OAAW,CAACE,EAAMC,CAAE,IAAKf,EACxBa,EAAkBA,EAAgB,WAAWC,EAAMC,CAAE,EAGlDH,IAAiBC,GACpBV,EAAYC,EAAaS,CAAe,CAE1C,CAAC,CACF,EACA,CAAC,SAAU,MAAM,CAClB,CACD,EAEAG,EAAS,+BAAgC,CAAC,EAAG,CAACC,EAAgB,CAAC,sBAAAC,CAAqB,IAAM,CACzF,IAAMC,EAAmBF,EAAe,IAAI,WAAW,EACjDnB,EAA4BoB,EAAsB,8BAA8B,EAAE,aAElFE,EAASD,EAAiB,IAAI,QAAQ,EAEtCE,EAA0BxB,EAA8BC,CAAyB,EACvF,OAAAsB,EAAO,IAAI,+BAAgC5B,EAAU6B,EAAyB,IAAM,EAAI,CAAC,EAElFD,CACR,CAAC",
  "names": ["readFromConsumerApi", "key", "args", "dist_default", "readFromConsumerApi", "addPlugin", "Plugin", "isEnabled", "ckEditorConfiguration", "options", "createInputSubstitutionPlugin", "replacementsConfiguration", "editor", "replacements", "search", "replace", "replaceText", "textElement", "newText", "traverseTextElements", "element", "textVisitor", "child", "evt", "data", "textContents", "newTextContents", "from", "to", "dist_default", "globalRegistry", "frontendConfiguration", "ckEditorRegistry", "config", "InputSubstitutionPlugin"]
}
